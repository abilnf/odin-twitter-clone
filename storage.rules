rules_version = '2';

function isImageBelowMaxSize(maxSizeMB) {
  return request.resource.size < maxSizeMB * 1024 * 1024
      && request.resource.contentType.matches('image/.*');
}

service firebase.storage {
  match /b/{bucket}/o {
    match /images/{userId}/{tweetId} {
      allow write: if request.auth != null
        && request.auth.uid == userId
        && isImageBelowMaxSize(5);
      allow read: if request.auth != null;
      allow delete: if request.auth != null
        && request.auth.uid == userId;
    }
  }
}
